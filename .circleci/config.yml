version: 2.1

orbs:
  node: circleci/node@4.1.0

workflows:
  heroku_deploy:
    jobs:
      - build
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: staging
      - deploy-master:
          requires:
            - build
          filters:
            branches:
              only: master

jobs:
  build:
    docker:
      - image: circleci/ruby:2.5-node
        environment:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:9.4.12-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: stockCube_test_db
          POSTGRES_PASSWORD: ""
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.0
        environment:
          - cluster.name: es-test-cluster
          - xpack.security.enabled: false
          - transport.host: localhost
          - network.host: 127.0.0.1
          - http.port: 9200
          - discovery.type: single-node
    working_directory: ~/circleci-demo-workflows
    steps:
      - checkout

      - restore_cache:
          key: stockcubes-cache-bundle-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          key: stockcubes-cache-yarn-{{ checksum "yarn.lock" }}

      # Bundle install dependencies
      - run:
          name: Bundle Install
          command: bin/bundle install --path vendor/bundle

      - node/install-yarn:
          version: 1.22.4
      - run:
          name: Yarn Install
          command: yarn install

      - save_cache:
          key: stockcubes-cache-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - save_cache:
          key: stockcubes-cache-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.yarn-cache

      # Database setup
      - run: bundle exec rake db:create db:schema:load
      - run:
          name: Run tests
          command: bundle exec rspec


  deploy-staging:
    machine:
        enabled: true
    environment:
      HEROKU_APP_NAME: "stockcubes-staging"
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: bash .circleci/setup-heroku.sh # run a script to set up Heroku

      - run:
          command: |
            git push heroku staging
            heroku run rake db:migrate
            sleep 5 # sleep for 5 seconds to wait for dynos
            heroku restart

  deploy-prod:
    machine:
        enabled: true
    environment:
      HEROKU_APP_NAME: "stockcubes-prod"
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: bash .circleci/setup-heroku.sh # run a script to set up Heroku

      - run:
          command: |
            git push heroku master
            heroku run rake db:migrate
            sleep 5 # sleep for 5 seconds to wait for dynos
            heroku restart